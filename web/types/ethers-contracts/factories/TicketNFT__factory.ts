/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { TicketNFT, TicketNFTInterface } from "../TicketNFT";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_marketplaceContract",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "NFTMinted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
    constant: true,
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
    constant: true,
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
    constant: true,
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
    constant: true,
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
    constant: true,
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
    constant: true,
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
    constant: true,
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
    constant: true,
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_tokenURI",
        type: "string",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040516200196f3803806200196f833981016040819052620000349162000184565b604080518082018252600a815269151a58dad95d0813919560b21b6020808301918252835180850190945260048452631513919560e21b9084015281519192916200008291600091620000de565b50805162000098906001906020840190620000de565b5050600880546001600160a01b0319166001600160a01b03841617905550620000ce6007620000d5602090811b6200083717901c565b50620001f2565b80546001019055565b828054620000ec90620001b6565b90600052602060002090601f0160209004810192826200011057600085556200015b565b82601f106200012b57805160ff19168380011785556200015b565b828001600101855582156200015b579182015b828111156200015b5782518255916020019190600101906200013e565b50620001699291506200016d565b5090565b5b808211156200016957600081556001016200016e565b6000602082840312156200019757600080fd5b81516001600160a01b0381168114620001af57600080fd5b9392505050565b600181811c90821680620001cb57607f821691505b602082108103620001ec57634e487b7160e01b600052602260045260246000fd5b50919050565b61176d80620002026000396000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c806370a082311161008c578063b88d4fde11610066578063b88d4fde146101e1578063c87b56dd146101f4578063d85d3d2714610207578063e985e9c51461021a57600080fd5b806370a08231146101a557806395d89b41146101c6578063a22cb465146101ce57600080fd5b8063095ea7b3116100c8578063095ea7b31461015757806323b872dd1461016c57806342842e0e1461017f5780636352211e1461019257600080fd5b806301ffc9a7146100ef57806306fdde0314610117578063081812fc1461012c575b600080fd5b6101026100fd3660046112c5565b610256565b60405190151581526020015b60405180910390f35b61011f6102a8565b60405161010e919061133a565b61013f61013a36600461134d565b61033a565b6040516001600160a01b03909116815260200161010e565b61016a610165366004611382565b610361565b005b61016a61017a3660046113ac565b61047b565b61016a61018d3660046113ac565b6104f3565b61013f6101a036600461134d565b61050e565b6101b86101b33660046113e8565b610573565b60405190815260200161010e565b61011f61060d565b61016a6101dc366004611403565b61061c565b61016a6101ef3660046114cb565b61062b565b61011f61020236600461134d565b6106aa565b61016a610215366004611547565b6107ba565b610102610228366004611590565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b60006001600160e01b031982166380ac58cd60e01b148061028757506001600160e01b03198216635b5e139f60e01b145b806102a257506301ffc9a760e01b6001600160e01b03198316145b92915050565b6060600080546102b7906115c3565b80601f01602080910402602001604051908101604052809291908181526020018280546102e3906115c3565b80156103305780601f1061030557610100808354040283529160200191610330565b820191906000526020600020905b81548152906001019060200180831161031357829003601f168201915b5050505050905090565b600061034582610840565b506000908152600460205260409020546001600160a01b031690565b600061036c8261050e565b9050806001600160a01b0316836001600160a01b0316036103de5760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b60648201526084015b60405180910390fd5b336001600160a01b03821614806103fa57506103fa8133610228565b61046c5760405162461bcd60e51b815260206004820152603e60248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60448201527f6b656e206f776e6572206e6f7220617070726f76656420666f7220616c6c000060648201526084016103d5565b61047683836108a7565b505050565b6104853382610922565b6104e85760405162461bcd60e51b815260206004820152602e60248201527f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560448201526d1c881b9bdc88185c1c1c9bdd995960921b60648201526084016103d5565b6104768383836109a0565b6104768383836040518060200160405280600081525061062b565b6000818152600260205260408120546001600160a01b0316806102a25760405162461bcd60e51b815260206004820152601860248201527f4552433732313a20696e76616c696420746f6b656e204944000000000000000060448201526064016103d5565b60006001600160a01b0382166105f15760405162461bcd60e51b815260206004820152602960248201527f4552433732313a2061646472657373207a65726f206973206e6f74206120766160448201527f6c6964206f776e6572000000000000000000000000000000000000000000000060648201526084016103d5565b506001600160a01b031660009081526003602052604090205490565b6060600180546102b7906115c3565b610627338383610b61565b5050565b6106353383610922565b6106985760405162461bcd60e51b815260206004820152602e60248201527f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560448201526d1c881b9bdc88185c1c1c9bdd995960921b60648201526084016103d5565b6106a484848484610c2f565b50505050565b60606106b582610840565b600082815260066020526040812080546106ce906115c3565b80601f01602080910402602001604051908101604052809291908181526020018280546106fa906115c3565b80156107475780601f1061071c57610100808354040283529160200191610747565b820191906000526020600020905b81548152906001019060200180831161072a57829003601f168201915b50505050509050600061076560408051602081019091526000815290565b90508051600003610777575092915050565b8151156107a95780826040516020016107919291906115fd565b60405160208183030381529060405292505050919050565b6107b284610cad565b949350505050565b60006107c560075490565b90506107d5600780546001019055565b6107df3382610d21565b6107e98183610d3b565b600854610800906001600160a01b0316600161061c565b6040518181527fd9dc24857f317ed9abbbb42e920ede0104231eb1d3d70236a74887ffaf1598689060200160405180910390a15050565b80546001019055565b6000818152600260205260409020546001600160a01b03166108a45760405162461bcd60e51b815260206004820152601860248201527f4552433732313a20696e76616c696420746f6b656e204944000000000000000060448201526064016103d5565b50565b6000818152600460205260409020805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b03841690811790915581906108e98261050e565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b60008061092e8361050e565b9050806001600160a01b0316846001600160a01b0316148061097557506001600160a01b0380821660009081526005602090815260408083209388168352929052205460ff165b806107b25750836001600160a01b031661098e8461033a565b6001600160a01b031614949350505050565b826001600160a01b03166109b38261050e565b6001600160a01b031614610a2f5760405162461bcd60e51b815260206004820152602560248201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060448201527f6f776e657200000000000000000000000000000000000000000000000000000060648201526084016103d5565b6001600160a01b038216610a915760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b60648201526084016103d5565b610a9c6000826108a7565b6001600160a01b0383166000908152600360205260408120805460019290610ac5908490611642565b90915550506001600160a01b0382166000908152600360205260408120805460019290610af3908490611659565b9091555050600081815260026020526040808220805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b816001600160a01b0316836001600160a01b031603610bc25760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c65720000000000000060448201526064016103d5565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b610c3a8484846109a0565b610c4684848484610de4565b6106a45760405162461bcd60e51b815260206004820152603260248201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560448201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b60648201526084016103d5565b6060610cb882610840565b6000610ccf60408051602081019091526000815290565b90506000815111610cef5760405180602001604052806000815250610d1a565b80610cf984610f30565b604051602001610d0a9291906115fd565b6040516020818303038152906040525b9392505050565b610627828260405180602001604052806000815250611049565b6000828152600260205260409020546001600160a01b0316610dc55760405162461bcd60e51b815260206004820152602e60248201527f45524337323155524953746f726167653a2055524920736574206f66206e6f6e60448201527f6578697374656e7420746f6b656e00000000000000000000000000000000000060648201526084016103d5565b6000828152600660209081526040909120825161047692840190611216565b60006001600160a01b0384163b15610f2557604051630a85bd0160e11b81526001600160a01b0385169063150b7a0290610e28903390899088908890600401611671565b6020604051808303816000875af1925050508015610e63575060408051601f3d908101601f19168201909252610e60918101906116ad565b60015b610f0b573d808015610e91576040519150601f19603f3d011682016040523d82523d6000602084013e610e96565b606091505b508051600003610f035760405162461bcd60e51b815260206004820152603260248201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560448201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b60648201526084016103d5565b805181602001fd5b6001600160e01b031916630a85bd0160e11b1490506107b2565b506001949350505050565b606081600003610f575750506040805180820190915260018152600360fc1b602082015290565b8160005b8115610f815780610f6b816116ca565b9150610f7a9050600a836116f9565b9150610f5b565b60008167ffffffffffffffff811115610f9c57610f9c61143f565b6040519080825280601f01601f191660200182016040528015610fc6576020820181803683370190505b5090505b84156107b257610fdb600183611642565b9150610fe8600a8661170d565b610ff3906030611659565b60f81b81838151811061100857611008611721565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350611042600a866116f9565b9450610fca565b61105383836110c7565b6110606000848484610de4565b6104765760405162461bcd60e51b815260206004820152603260248201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560448201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b60648201526084016103d5565b6001600160a01b03821661111d5760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f206164647265737360448201526064016103d5565b6000818152600260205260409020546001600160a01b0316156111825760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e7465640000000060448201526064016103d5565b6001600160a01b03821660009081526003602052604081208054600192906111ab908490611659565b9091555050600081815260026020526040808220805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b03861690811790915590518392907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b828054611222906115c3565b90600052602060002090601f016020900481019282611244576000855561128a565b82601f1061125d57805160ff191683800117855561128a565b8280016001018555821561128a579182015b8281111561128a57825182559160200191906001019061126f565b5061129692915061129a565b5090565b5b80821115611296576000815560010161129b565b6001600160e01b0319811681146108a457600080fd5b6000602082840312156112d757600080fd5b8135610d1a816112af565b60005b838110156112fd5781810151838201526020016112e5565b838111156106a45750506000910152565b600081518084526113268160208601602086016112e2565b601f01601f19169290920160200192915050565b602081526000610d1a602083018461130e565b60006020828403121561135f57600080fd5b5035919050565b80356001600160a01b038116811461137d57600080fd5b919050565b6000806040838503121561139557600080fd5b61139e83611366565b946020939093013593505050565b6000806000606084860312156113c157600080fd5b6113ca84611366565b92506113d860208501611366565b9150604084013590509250925092565b6000602082840312156113fa57600080fd5b610d1a82611366565b6000806040838503121561141657600080fd5b61141f83611366565b91506020830135801515811461143457600080fd5b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b600067ffffffffffffffff808411156114705761147061143f565b604051601f8501601f19908116603f011681019082821181831017156114985761149861143f565b816040528093508581528686860111156114b157600080fd5b858560208301376000602087830101525050509392505050565b600080600080608085870312156114e157600080fd5b6114ea85611366565b93506114f860208601611366565b925060408501359150606085013567ffffffffffffffff81111561151b57600080fd5b8501601f8101871361152c57600080fd5b61153b87823560208401611455565b91505092959194509250565b60006020828403121561155957600080fd5b813567ffffffffffffffff81111561157057600080fd5b8201601f8101841361158157600080fd5b6107b284823560208401611455565b600080604083850312156115a357600080fd5b6115ac83611366565b91506115ba60208401611366565b90509250929050565b600181811c908216806115d757607f821691505b6020821081036115f757634e487b7160e01b600052602260045260246000fd5b50919050565b6000835161160f8184602088016112e2565b8351908301906116238183602088016112e2565b01949350505050565b634e487b7160e01b600052601160045260246000fd5b6000828210156116545761165461162c565b500390565b6000821982111561166c5761166c61162c565b500190565b60006001600160a01b038087168352808616602084015250836040830152608060608301526116a3608083018461130e565b9695505050505050565b6000602082840312156116bf57600080fd5b8151610d1a816112af565b6000600182016116dc576116dc61162c565b5060010190565b634e487b7160e01b600052601260045260246000fd5b600082611708576117086116e3565b500490565b60008261171c5761171c6116e3565b500690565b634e487b7160e01b600052603260045260246000fdfea26469706673582212206205dc2170790c307e191efbf9afc0232988d8a6b355b3363ac86412cbb8c81464736f6c634300080d0033";

type TicketNFTConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TicketNFTConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TicketNFT__factory extends ContractFactory {
  constructor(...args: TicketNFTConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _marketplaceContract: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<TicketNFT> {
    return super.deploy(
      _marketplaceContract,
      overrides || {}
    ) as Promise<TicketNFT>;
  }
  override getDeployTransaction(
    _marketplaceContract: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_marketplaceContract, overrides || {});
  }
  override attach(address: string): TicketNFT {
    return super.attach(address) as TicketNFT;
  }
  override connect(signer: Signer): TicketNFT__factory {
    return super.connect(signer) as TicketNFT__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TicketNFTInterface {
    return new utils.Interface(_abi) as TicketNFTInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TicketNFT {
    return new Contract(address, _abi, signerOrProvider) as TicketNFT;
  }
}
